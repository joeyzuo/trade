<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comom.mapper.StrategyrecordMapper">
  <resultMap id="BaseResultMap" type="com.comom.domain.Strategyrecord">
    <!--@mbg.generated-->
    <!--@Table strategyrecord-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="strategy" jdbcType="VARCHAR" property="strategy" />
    <result column="start_price" jdbcType="DOUBLE" property="startPrice" />
    <result column="over_price" jdbcType="DOUBLE" property="overPrice" />
    <result column="direction" jdbcType="VARCHAR" property="direction" />
    <result column="grid_number" jdbcType="INTEGER" property="gridNumber" />
    <result column="stop_loss" jdbcType="DOUBLE" property="stopLoss" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
    <result column="need_funds" jdbcType="DOUBLE" property="needFunds" />
    <result column="trade_num" jdbcType="DOUBLE" property="tradeNum" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, create_time, symbol, strategy, start_price, over_price, direction, grid_number, 
    stop_loss, fee, need_funds, trade_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from strategyrecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from strategyrecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.comom.domain.Strategyrecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into strategyrecord (create_time, symbol, strategy, 
      start_price, over_price, direction, 
      grid_number, stop_loss, fee, 
      need_funds, trade_num)
    values (#{createTime,jdbcType=TIMESTAMP}, #{symbol,jdbcType=VARCHAR}, #{strategy,jdbcType=VARCHAR}, 
      #{startPrice,jdbcType=DOUBLE}, #{overPrice,jdbcType=DOUBLE}, #{direction,jdbcType=VARCHAR}, 
      #{gridNumber,jdbcType=INTEGER}, #{stopLoss,jdbcType=DOUBLE}, #{fee,jdbcType=DOUBLE}, 
      #{needFunds,jdbcType=DOUBLE}, #{tradeNum,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.comom.domain.Strategyrecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into strategyrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="strategy != null">
        strategy,
      </if>
      <if test="startPrice != null">
        start_price,
      </if>
      <if test="overPrice != null">
        over_price,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="gridNumber != null">
        grid_number,
      </if>
      <if test="stopLoss != null">
        stop_loss,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="needFunds != null">
        need_funds,
      </if>
      <if test="tradeNum != null">
        trade_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="strategy != null">
        #{strategy,jdbcType=VARCHAR},
      </if>
      <if test="startPrice != null">
        #{startPrice,jdbcType=DOUBLE},
      </if>
      <if test="overPrice != null">
        #{overPrice,jdbcType=DOUBLE},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=VARCHAR},
      </if>
      <if test="gridNumber != null">
        #{gridNumber,jdbcType=INTEGER},
      </if>
      <if test="stopLoss != null">
        #{stopLoss,jdbcType=DOUBLE},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DOUBLE},
      </if>
      <if test="needFunds != null">
        #{needFunds,jdbcType=DOUBLE},
      </if>
      <if test="tradeNum != null">
        #{tradeNum,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.comom.domain.Strategyrecord">
    <!--@mbg.generated-->
    update strategyrecord
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="strategy != null">
        strategy = #{strategy,jdbcType=VARCHAR},
      </if>
      <if test="startPrice != null">
        start_price = #{startPrice,jdbcType=DOUBLE},
      </if>
      <if test="overPrice != null">
        over_price = #{overPrice,jdbcType=DOUBLE},
      </if>
      <if test="direction != null">
        direction = #{direction,jdbcType=VARCHAR},
      </if>
      <if test="gridNumber != null">
        grid_number = #{gridNumber,jdbcType=INTEGER},
      </if>
      <if test="stopLoss != null">
        stop_loss = #{stopLoss,jdbcType=DOUBLE},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DOUBLE},
      </if>
      <if test="needFunds != null">
        need_funds = #{needFunds,jdbcType=DOUBLE},
      </if>
      <if test="tradeNum != null">
        trade_num = #{tradeNum,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.comom.domain.Strategyrecord">
    <!--@mbg.generated-->
    update strategyrecord
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      symbol = #{symbol,jdbcType=VARCHAR},
      strategy = #{strategy,jdbcType=VARCHAR},
      start_price = #{startPrice,jdbcType=DOUBLE},
      over_price = #{overPrice,jdbcType=DOUBLE},
      direction = #{direction,jdbcType=VARCHAR},
      grid_number = #{gridNumber,jdbcType=INTEGER},
      stop_loss = #{stopLoss,jdbcType=DOUBLE},
      fee = #{fee,jdbcType=DOUBLE},
      need_funds = #{needFunds,jdbcType=DOUBLE},
      trade_num = #{tradeNum,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>